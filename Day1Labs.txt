Lab 4 -       
              create a class Emp
              Create a class EmpManager {
                     declare a empcoll as private array
                     give 3 methods
                            1. add emp to empcoll -> accept emp as argument, no return
                            2. delete emp - accept a number and delete that record from empcoll -> splice (https://www.w3schools.com/jsref/jsref_obj_array.asp)
                            3. list -. show all the recods
              }
              create instance of EMpManagaer 
              add 5 emps
              print
              remove 3rd
              print
        -------------
          class Emp {
                empno: number;
                ename: string
                salary:number

                public incrSalary(percent:number):void {
                    this.salary+=this.salary*percent/100
                  }
                public toString():string{
                    return "\t" + this.empno + "\t" + this.ename + "\t\t" + this.salary
                }  
              }

            class EmpManager{
                private empcoll: Emp[] = []

                public addEmp(emp: Emp) {
                    this.empcoll.push(emp)
                }

                public deleteEmp(no: number) {
                    this.empcoll.splice(no-1, 1)
                }

                public showEmp():void {
                    console.log("----------------Employees List------------")
                    this.empcoll.forEach(this.myFunction);
                }
                public myFunction(item, index) {      
                      console.log(index + "\t " +item.toString() )
                  }
            }
            const em1 = new EmpManager();

            for (var _i = 0; _i < 5; _i++) {
                const e1 = new Emp();
                e1.empno = _i + 1
                e1.ename="Nameof"+_i
                e1.salary = (_i+1)*1000
                em1.addEmp(e1)
            }
            em1.showEmp()
            em1.deleteEmp(3)
            em1.showEmp()

        -------------
Lab 3 - Create class
       class Emp {
           empno: number;
           ename: string
           salary:number

           public incrSalary(percent:number) {
               this.salary+=this.salary*percent/100
             }

         }
       const e1 = new Emp();
       e1.empno = 1
       e1.ename="Aaaaa"
       e1.salary = 10000
       console.log(e1)
       e1.incrSalary(20)
       console.log(e1)


Lab2 - create Lab2.ts
              const names:string[] = [];
              names.push("aaa")
              names.push("bbb")
              names.push("ccc")

              console.log(names)


Lab1 - cmd>npm install -g typescript 
       create C:\demo\Day1\Part1-SimpleTs 
       visual studio code -> Create Lab1.ts
              let x:number = 30
              let y = 300 // type is inferred
              let z:String ="aaa"
              z = "Fands"
              console.log(z)
       cmd>tsc Lab1.ts
       cmd>node Lab1.js
       Code - number, string, bool datatypes
-------------
Setup2 - Work with playground https://www.typescriptlang.org/play
       Write code to declare variables
              1. implicitly typed
              2. Explicite typed
              3. try Redeclare 
              4. try assigning different types
              5. significance of any (data type) 
              let x:number = 30
              let y = 300 // type is inferred
              let z:any ="aaa"
              z =44400
------------
Setup1 - Download nodejs -  https://nodejs.org/en/download/ 
       Install Node
       cmd>node 
          interactive tool => 55+333
                              console.log("hello")
       
       Install visual Studio code
        
