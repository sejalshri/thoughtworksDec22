Lab6 - Create a class as Emp -> 3 private variables, empno, ename, salary 
            constructor, public get/set methods
            1. salaryIncr(percent)
            2. toString -> print emp details    
----------
Function Programming
    https://youtu.be/bK-Tz-GLfOs

/// passing array is not going to be curry impl, as single function call
Lab 5 - Currying -> strcture
    function curry(targetFn, existingArgs) {
    console.log("in curry main function");
    return function (str) {
        console.log("in return function : " + str);
        targetFn(str);
    };
    }
    var tf = function (str) { console.log("in targetfunction " + str); };
    curry(tf, "myarg")("a");

    Modify existingArgs to Array and invoke target function multiple times


Lab 4- closure
    function dtor(conversionrate: number): (dl: number) => number {
        console.log("in dtor, current conversionrate = "+ conversionrate)
        // retaining value of x in return function
        return function(dl: number): number {
            console.log("in retured function, current x = " +conversionrate )    
            return dl * conversionrate;
        }
    }

    let x = dtor(80)
    console.log(x(10))
    console.log(x(20))
    console.log(x(30))
    console.log(x(40))



Lab3 - Modify code to support 

    // Named function
    function add(x, y) {
        return x + y;
    }
    function process(int, int , function){
      // invoke the function and print result
    }

      // Anonymous function
    let myAdd = function (x, y) {     return x + y;   };
    // invoke process to do +,-,*, / as operation
      1. named function
      2. Anonymous function
      3. inline declare

Lab2 - // Composition - whether to invoke morning or evening is decided by greet
      /*
      function greet(content:string){
        morning("Vaishali")
        console.log(content);
      }
      */
      // aggregation
      function greet(gfn: (s:string)=>void,  content:string){
        gfn("StaticName")
        console.log(content)
      }

      function morning(s: string) {
        console.log("Good Morning, " + s);
      }

      function evening(s: string) {
        console.log("Good Evening, " + s);
      }

      //morning("Vaishali")
      greet(morning, "How are things?")
      greet((s:string)=>console.log("in line function"),"How are things?")
      //greeter(printToConsole);


Lab1 - create new folder, npm init...
  // Named function
      function add(x, y) {
          return x + y;
      }

        // Anonymous function
      let myAdd = function (x, y) {     return x + y;   };

      console.log(add(300,500))
      console.log(add("aaa","bbb"))
      console.log(add(true,true))

      console.log(myAdd(10,55))
      // array as well enum
      // pass emp
