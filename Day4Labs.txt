Lab 5- same as Lab2 
           console.log(request.url)
           use request.url to send different pages to client
                / -> welcome page as index.html(content)
                /page1 -> show page1
                /page2-> show page2
       postman -> localhost:8080/
                  localhost:8080/page1
                  localhost:8080/page2
       
Lab 4- 
        var http = require("http")
        http.get('http://localhost:8080/aaa', (res) => {
                const { statusCode } = res;
                const contentType = res.headers['content-type'];
                let error;
                // Any 2xx status code signals a successful response but
                // here we're only checking for 200.
                if (statusCode !== 200) {
                  error = new Error('Request Failed.\n' +
                                                        `Status Code: ${statusCode}`);
                } else if (!/^text\/html/.test(contentType)) {
                  error = new Error('Invalid content-type.\n' +
                                                        `Expected application/json but received ${contentType}`);
                }
                if (error) {
                  console.error("Error " + error.message);
                  // Consume response data to free up memory
                  res.resume();
                  return;
                }
            console.log("Success...")
        })
---------------
Lab3 - var http = require('http');
        var handlerequest = function(request,response)
                {
                        response.writeHead(200, {'Content-Type': 'text/html'}); 
                        response.write("<h1>hello, ...from Node</h1>"); 
                        response.end();
                }
        console.log("Starting server on 8080")    
        var server = http.createServer(handlerequest);
        server.listen(8080);

-------------
Lab2 - 
    const https = require('https');
    let data:string =""
    let request = https.get('https://reqres.in/api/users?page=1', (res) => {
      if (res.statusCode !== 200) {
        console.error(`Did not get an OK from the server. Code: ${res.statusCode}`);
        res.resume();
        return;
      }
      res.on('data', (chunk) => {
        console.log(`\n\nBODY: ${chunk}`);
        data += chunk
      });
      res.on('end', () => {
        console.log('No more data in response.');
        console.log("Data " +  data)
        console.log(JSON.parse(data))
      });
    });
  Write code close and error events -> confirm when they are invoked.
--------------
Lab1 - Http Get Request
        var http = require("https")
        console.log(http)
        http.get('https://reqres.in/api/users/2', (res) => {
          const { statusCode } = res;
          const contentType = res.headers['content-type'];
          console.log(res)
          let error;
          // Any 2xx status code signals a successful response but
          // here we're only checking for 200.
          if (statusCode !== 200) {
            error = new Error('Request Failed.\n' +
                    `Status Code: ${statusCode}`);
          } else if (!/^application\/json/.test(contentType)) {
            error = new Error('Invalid content-type.\n' +
                    `Expected application/json but received ${contentType}`);
          }
          if (error) {
            console.error(error.message);
            // Consume response data to free up memory
            res.resume();
            return;
          }
        })
